<<<<<<< HEAD
import { GraphQLError } from '../../error/GraphQLError.mjs';
=======
import { GraphQLError } from "../../error/GraphQLError.mjs";
>>>>>>> efb60b5ba318ea79afa9b17c06eb55420dda5343

/**
 * Unique operation names
 *
 * A GraphQL document is only valid if all defined operations have unique names.
<<<<<<< HEAD
 *
 * See https://spec.graphql.org/draft/#sec-Operation-Name-Uniqueness
 */
export function UniqueOperationNamesRule(context) {
  const knownOperationNames = Object.create(null);
  return {
    OperationDefinition(node) {
      const operationName = node.name;

      if (operationName) {
        if (knownOperationNames[operationName.value]) {
          context.reportError(
            new GraphQLError(
              `There can be only one operation named "${operationName.value}".`,
              [knownOperationNames[operationName.value], operationName],
            ),
          );
=======
 */
export function UniqueOperationNamesRule(context) {
  var knownOperationNames = Object.create(null);
  return {
    OperationDefinition: function OperationDefinition(node) {
      var operationName = node.name;

      if (operationName) {
        if (knownOperationNames[operationName.value]) {
          context.reportError(new GraphQLError("There can be only one operation named \"".concat(operationName.value, "\"."), [knownOperationNames[operationName.value], operationName]));
>>>>>>> efb60b5ba318ea79afa9b17c06eb55420dda5343
        } else {
          knownOperationNames[operationName.value] = operationName;
        }
      }

      return false;
    },
<<<<<<< HEAD

    FragmentDefinition: () => false,
=======
    FragmentDefinition: function FragmentDefinition() {
      return false;
    }
>>>>>>> efb60b5ba318ea79afa9b17c06eb55420dda5343
  };
}
