<<<<<<< HEAD
import type { ASTVisitor } from '../../language/visitor';
import type { ValidationContext } from '../ValidationContext';
=======
import { ASTVisitor } from '../../language/visitor';
import { ValidationContext } from '../ValidationContext';

>>>>>>> efb60b5ba318ea79afa9b17c06eb55420dda5343
/**
 * Fragments on composite type
 *
 * Fragments use a type condition to determine if they apply, since fragments
 * can only be spread into a composite type (object, interface, or union), the
 * type condition must also be a composite type.
<<<<<<< HEAD
 *
 * See https://spec.graphql.org/draft/#sec-Fragments-On-Composite-Types
 */
export declare function FragmentsOnCompositeTypesRule(
=======
 */
export function FragmentsOnCompositeTypesRule(
>>>>>>> efb60b5ba318ea79afa9b17c06eb55420dda5343
  context: ValidationContext,
): ASTVisitor;
