<<<<<<< HEAD
import { GraphQLError } from '../../error/GraphQLError.mjs';
=======
import { GraphQLError } from "../../error/GraphQLError.mjs";
>>>>>>> efb60b5ba318ea79afa9b17c06eb55420dda5343

/**
 * Known fragment names
 *
 * A GraphQL document is only valid if all `...Fragment` fragment spreads refer
 * to fragments defined in the same document.
<<<<<<< HEAD
 *
 * See https://spec.graphql.org/draft/#sec-Fragment-spread-target-defined
 */
export function KnownFragmentNamesRule(context) {
  return {
    FragmentSpread(node) {
      const fragmentName = node.name.value;
      const fragment = context.getFragment(fragmentName);

      if (!fragment) {
        context.reportError(
          new GraphQLError(`Unknown fragment "${fragmentName}".`, node.name),
        );
      }
    },
=======
 */
export function KnownFragmentNamesRule(context) {
  return {
    FragmentSpread: function FragmentSpread(node) {
      var fragmentName = node.name.value;
      var fragment = context.getFragment(fragmentName);

      if (!fragment) {
        context.reportError(new GraphQLError("Unknown fragment \"".concat(fragmentName, "\"."), node.name));
      }
    }
>>>>>>> efb60b5ba318ea79afa9b17c06eb55420dda5343
  };
}
